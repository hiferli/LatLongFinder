# -*- coding: utf-8 -*-
"""LatLong_FromPINCodes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kD0MTYaYysWh-ocm_wLAzzCO_2EPxcS0
"""

import requests
import json
import time

import pandas as pd
import numpy as np

# Constants
API_KEY="SOME_API_KEY"
COUNTRY="IN"
API_STRUCTURE=f'https://geocode.maps.co/search?postalcode={pincode}&country={COUNTRY}&api_key={API_KEY}'

# Function to get the Latitude, Longitude and Location from PIN Code
def getLocationName(pincode):
    api_url = f'https://geocode.maps.co/search?postalcode={pincode}&country={COUNTRY}&api_key={API_KEY}'

    try:
        response = requests.get(api_url)

        if response.status_code == 200:
            api_data = response.json()

            if api_data:
                location_info = {
                    "lat": api_data[0].get("lat", None),
                    "lon": api_data[0].get("lon", None),
                    "display_name": api_data[0].get("display_name", None),
                }

                # print(location_info)
                return location_info
            else:
                print("Empty API response.")
                return {}
        else:
            print(f"Error: {response.status_code} - {response.text}")
            return {}
    except Exception as e:
        print(f"Exception: {e}")
        return {}
    finally:
        # Introduce a delay of 1 second to comply with the rate limit
        time.sleep(2)

# Example usage:
pincode_to_search = "400009"
# COUNTRY = "India"  # Replace with the actual country value
# API_KEY = "your_api_key"  # Replace with the actual API key

location_info = getLocationName(pincode_to_search)

if location_info:
    print(f"Location information for PINCODE {pincode_to_search}:")
    print(location_info)
else:
    print("Failed to fetch location information.")

# Reading Data from CSV File
df = pd.read_csv('/content/Pin_code.csv')

print(df)

# Taking a sample of the dataframe, since the API has a rate limiter with limit of 2 seconds, hence would take a lot of time to parse all the data
sample_df = df.sample(n=5);
sample_df

# Getting the details using the API
location_info_df = sample_df['PIN Code'].apply(getLocationName).apply(pd.Series)

# Concatenation of the requested data and the PIN Codes
sample_df = pd.concat([sample_df, location_info_df], axis=1)

# Renaming the columns
sample_df = sample_df.rename(columns={0: 'Latitude', 1: 'Longitude', 2: 'Display Name'})

# Note that whenever the required data can't be found, we return an NaN type
sample_df
